/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paquete;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import paquete.Agenda;
import paquete.AgendaUnidad;

/**
 *
 * @author OTTONIEL CAMPOS
 */
public class Principal extends javax.swing.JFrame {

  
    
    public Principal() {
        initComponents();
        

        Agenda pais = new Agenda();

        DefaultComboBoxModel modeloComboPais = new DefaultComboBoxModel(pais.mostrarPaises());
        comboPais.setModel(modeloComboPais);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        comboPais = new javax.swing.JComboBox<>();
        comboUnidad = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaRest = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cajaNoRest = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cajaNombreRest = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cajaDireccionRest = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cajaCorreoRest = new javax.swing.JTextField();
        botonIngresoRest = new javax.swing.JButton();
        botonUpDate = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        botonDvr = new javax.swing.JButton();
        cajaIdRest = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        comboPais.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPaisItemStateChanged(evt);
            }
        });
        comboPais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboPaisMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboPaisMousePressed(evt);
            }
        });
        comboPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPaisActionPerformed(evt);
            }
        });

        comboUnidad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboUnidadItemStateChanged(evt);
            }
        });
        comboUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboUnidadActionPerformed(evt);
            }
        });

        tablaRest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No Rest", "Nombre", "Direccion", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaRest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaRestMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaRest);

        jLabel1.setText("No rest:");

        cajaNoRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaNoRestActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre:");

        cajaNombreRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaNombreRestActionPerformed(evt);
            }
        });

        jLabel3.setText("Direccion:");

        cajaDireccionRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaDireccionRestActionPerformed(evt);
            }
        });

        jLabel4.setText("Correo:");

        cajaCorreoRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaCorreoRestActionPerformed(evt);
            }
        });

        botonIngresoRest.setText("Ingreso");
        botonIngresoRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIngresoRestActionPerformed(evt);
            }
        });

        botonUpDate.setText("UpDate");
        botonUpDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUpDateActionPerformed(evt);
            }
        });

        botonBorrar.setText("Borrar");
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        botonDvr.setText("DVR");
        botonDvr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDvrActionPerformed(evt);
            }
        });

        cajaIdRest.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboPais, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(comboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cajaDireccionRest, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(botonIngresoRest)
                                                .addGap(18, 18, 18)
                                                .addComponent(botonUpDate)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(botonBorrar))
                                            .addComponent(cajaCorreoRest, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cajaNombreRest, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cajaNoRest, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cajaIdRest, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(67, 67, 67)
                                        .addComponent(botonDvr, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(cajaIdRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cajaNoRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cajaNombreRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(botonDvr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cajaDireccionRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cajaCorreoRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonIngresoRest)
                            .addComponent(botonUpDate)
                            .addComponent(botonBorrar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Agenda", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1339, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 562, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Alarmas", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1339, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 562, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Control de Acceso", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1339, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 562, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab4", jPanel4);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void comboPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPaisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPaisActionPerformed

    private void comboPaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboPaisMouseClicked
        //unidad();
    }//GEN-LAST:event_comboPaisMouseClicked

    private void comboPaisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboPaisMousePressed

    }//GEN-LAST:event_comboPaisMousePressed

    private void comboUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboUnidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboUnidadActionPerformed

    private void comboPaisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPaisItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Agenda pais = (Agenda) comboPais.getSelectedItem();

            AgendaUnidad unidad = new AgendaUnidad();
            DefaultComboBoxModel modeloComboUnidad = new DefaultComboBoxModel(unidad.mostrarUnidad(pais.getIdPais()));

            comboUnidad.setModel(modeloComboUnidad);

        }


    }//GEN-LAST:event_comboPaisItemStateChanged

    private void comboUnidadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboUnidadItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            tablaBuscarRest();
        }//fin del if   


    }//GEN-LAST:event_comboUnidadItemStateChanged

    private void cajaNoRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaNoRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaNoRestActionPerformed

    private void cajaNombreRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaNombreRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaNombreRestActionPerformed

    private void cajaDireccionRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaDireccionRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaDireccionRestActionPerformed

    private void cajaCorreoRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaCorreoRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaCorreoRestActionPerformed

    private void botonIngresoRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIngresoRestActionPerformed

        IngresarRestaurante();
        tablaBuscarRest();

    }//GEN-LAST:event_botonIngresoRestActionPerformed

    private void botonUpDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUpDateActionPerformed
        upDateRestaurante();
        tablaBuscarRest();
    }//GEN-LAST:event_botonUpDateActionPerformed

    private void tablaRestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaRestMouseClicked
         AgendaUnidad unidad = (AgendaUnidad) comboUnidad.getSelectedItem();

        PreparedStatement ps=null;
        ResultSet rs=null;
        
        try{
            Conexion con = new Conexion();
            Connection conexion = con.getConnection();
            
            int fila = tablaRest.getSelectedRow();
            String codigo = tablaRest.getValueAt(fila, 0).toString();
            
            ps = conexion.prepareStatement("select idrest, norest, nombrerest, direccionrest, correorest from restaurante where norest = ? and idunidad = ? ");
            ps.setInt(1, Integer.parseInt(codigo));
            ps.setInt(2, unidad.getIdUnidad());
            
            rs = ps.executeQuery();
            System.out.println(codigo);
            
            while(rs.next()){
                cajaIdRest.setText(rs.getInt("idrest")+"");
                cajaNoRest.setText(rs.getInt("norest")+"");
                cajaNombreRest.setText(rs.getString("nombrerest"));
                cajaDireccionRest.setText(rs.getString("direccionrest"));
                cajaCorreoRest.setText(rs.getString("correorest"));
            }
            
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
        
            
            
      
        
    }//GEN-LAST:event_tablaRestMouseClicked

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        borrarRest();
        tablaBuscarRest();
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void botonDvrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDvrActionPerformed

        VentanaDVR a = new VentanaDVR();
        a.setIdRestDvr(Integer.parseInt(cajaIdRest.getText()));
        a.setVisible(true);

        
        //this.setVisible(false);
    }//GEN-LAST:event_botonDvrActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonDvr;
    private javax.swing.JButton botonIngresoRest;
    private javax.swing.JButton botonUpDate;
    private javax.swing.JTextField cajaCorreoRest;
    private javax.swing.JTextField cajaDireccionRest;
    public static javax.swing.JTextField cajaIdRest;
    private javax.swing.JTextField cajaNoRest;
    private javax.swing.JTextField cajaNombreRest;
    private javax.swing.JComboBox<String> comboPais;
    private javax.swing.JComboBox<String> comboUnidad;
    public javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablaRest;
    // End of variables declaration//GEN-END:variables

    private void tablaBuscarRest() {
        AgendaUnidad unidad = (AgendaUnidad) comboUnidad.getSelectedItem();

        DefaultTableModel modeloTabla = new DefaultTableModel();
        tablaRest.setModel(modeloTabla);

        PreparedStatement ps = null;
        ResultSet rs = null;

        try {
            Conexion con = new Conexion();
            Connection conexion = con.getConnection();

            ps = conexion.prepareStatement("select norest,nombrerest,direccionrest,correorest from restaurante where idunidad=" + unidad.getIdUnidad());
            rs = ps.executeQuery();
           

            //establecer columnas
            modeloTabla.addColumn("No Rest");
            modeloTabla.addColumn("Nombre");
            modeloTabla.addColumn("Direccion");
            modeloTabla.addColumn("Correo");

            ResultSetMetaData rsMD = rs.getMetaData();
            int cantidadColumnas = rsMD.getColumnCount();
            

            //tamaño de las columnas
            int anchos[] = {50, 100, 200, 100};

            for (int i = 0; i < cantidadColumnas; i++) {
                tablaRest.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            //agregar filas
            while (rs.next()) {
                Object fila[] = new Object[cantidadColumnas];

                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = rs.getObject(i + 1);
                }

                modeloTabla.addRow(fila);
              
            }

            rs.close();
        } catch (Exception ex) {
            System.err.println("Error, " + ex);
        }

    }

    private void IngresarRestaurante() {
        AgendaUnidad unidad = (AgendaUnidad) comboUnidad.getSelectedItem();

        Conexion con = new Conexion();
        Connection conexion = con.getConnection();

        PreparedStatement ps = null;
        ResultSet rs = null;

        try {
            ps = conexion.prepareStatement("insert into restaurante (idunidad, norest, nombrerest, direccionrest, correorest) values (?, ?, ?, ?, ?)");
            ps.setInt(1, unidad.getIdUnidad());
            ps.setInt(2, Integer.parseInt(cajaNoRest.getText()));
            ps.setString(3, cajaNombreRest.getText());
            ps.setString(4, cajaDireccionRest.getText());
            ps.setString(5, cajaCorreoRest.getText());

            int resultado = ps.executeUpdate();

            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Ingresado");

            } else {
                JOptionPane.showMessageDialog(null, "No Ingresado");

            }

            conexion.close();

        } catch (Exception ex) {
            System.err.println("Error, " + ex);

        }

    }  // final del metodo IngresarRestaurante

    private void upDateRestaurante() {
        AgendaUnidad unidad = (AgendaUnidad) comboUnidad.getSelectedItem();
        Conexion con = new Conexion();
        Connection conexion = con.getConnection();
        boolean confirmacion = true;

        PreparedStatement ps;
        ResultSet rs;

        try {

            ps = conexion.prepareStatement("update restaurante set nombrerest=?,direccionrest=?,correorest=? where norest = ?");

           
            ps.setString(1, cajaNombreRest.getText());
            ps.setString(2, cajaDireccionRest.getText());
            ps.setString(3, cajaCorreoRest.getText());
            ps.setInt(4, Integer.parseInt(cajaNoRest.getText()));

            int resultado = ps.executeUpdate();

            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Actualizado");

            } else {
                JOptionPane.showMessageDialog(null, "No Actualizado");

            }
        } catch (Exception ex) {
            System.err.println("Error, " + ex);
            JOptionPane.showMessageDialog(null, "No Actualizado");
        }

    }  //Fin del update
    
    private void borrarRest(){
        AgendaUnidad unidad = (AgendaUnidad) comboUnidad.getSelectedItem();

        Conexion con = new Conexion();
        Connection conexion = con.getConnection();

        PreparedStatement ps = null;
        ResultSet rs = null;

        try {
            ps = conexion.prepareStatement("delete from restaurante where norest = ? and idunidad = ?");
            ps.setInt(1, Integer.parseInt(cajaNoRest.getText()));
            ps.setInt(2, unidad.getIdUnidad());

            int resultado = ps.executeUpdate();

            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Eliminado");

            } else {
                JOptionPane.showMessageDialog(null, "No Eliminado");

            }

            conexion.close();

        } catch (Exception ex) {
            System.err.println("Error, " + ex);

        }
    } //Fin de la funcion borrar

}
